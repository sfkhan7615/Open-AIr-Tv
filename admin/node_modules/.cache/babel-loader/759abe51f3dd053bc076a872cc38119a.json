{"ast":null,"code":"var _jsxFileName = \"/home/oatvadmin/public_html/admin/src/components/view/SpaceResImages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Dropzone from \"react-dropzone\";\nimport \"dropzone/dist/dropzone.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nfunction Dashboard() {\n  _s();\n\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n\n      reader.onabort = () => console.log('file reading was aborted');\n\n      reader.onerror = () => console.log('file reading has failed');\n\n      reader.onload = () => {\n        // Do whatever you want with the file contents\n        const binaryStr = reader.result;\n        console.log(binaryStr);\n      };\n\n      reader.readAsArrayBuffer(file);\n    });\n  }, []);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop\n  }); // const myDropzone = new Dropzone(\"#my-form\");\n  // const output = document.querySelector(\"#output\");\n\n  if (document.getElementById('my-form')) {\n    var myDropzone = new Dropzone(\"#my-form\", {\n      url: \"/file/post\"\n    }); // other code here\n  }\n\n  const navigate = useNavigate();\n  const [palylistCount, setPalylistCount] = useState();\n  const [VideosCount, setVideosCount] = useState();\n  useEffect(() => {\n    const user_id = sessionStorage.getItem(\"user_id\");\n    const token = localStorage.getItem('token');\n    axios.get(process.env.REACT_APP_API_URL + \"/manageplaylist/getAlldata\").then(response => {\n      setPalylistCount(response.data.length);\n    }); // Get All Videos Data\n\n    axios.get(process.env.REACT_APP_API_URL + \"/playlist_video/getAlldata\").then(response => {\n      setVideosCount(response.data.length);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card radius-10\",\n    children: /*#__PURE__*/_jsxDEV(Dropzone, {\n      onDrop: acceptedFiles => console.log(acceptedFiles),\n      children: _ref => {\n        let {\n          getRootProps,\n          getInputProps\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"section\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Drag 'n' drop some files here, or click to select files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"+7RG6Ao9zZ8fMVBp0xzpIlDI/mk=\", true, function () {\n  return [useNavigate];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/oatvadmin/public_html/admin/src/components/view/SpaceResImages.js"],"names":["React","useEffect","useState","useNavigate","Dropzone","axios","require","Dashboard","onDrop","useCallback","acceptedFiles","forEach","file","reader","FileReader","onabort","console","log","onerror","onload","binaryStr","result","readAsArrayBuffer","getRootProps","getInputProps","useDropzone","document","getElementById","myDropzone","url","navigate","palylistCount","setPalylistCount","VideosCount","setVideosCount","user_id","sessionStorage","getItem","token","localStorage","get","process","env","REACT_APP_API_URL","then","response","data","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport \"dropzone/dist/dropzone.css\";\r\n\r\nconst axios = require('axios');\r\n\r\nfunction Dashboard() {\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    acceptedFiles.forEach((file) => {\r\n      const reader = new FileReader()\r\n\r\n      reader.onabort = () => console.log('file reading was aborted')\r\n      reader.onerror = () => console.log('file reading has failed')\r\n      reader.onload = () => {\r\n      // Do whatever you want with the file contents\r\n        const binaryStr = reader.result\r\n        console.log(binaryStr)\r\n      }\r\n      reader.readAsArrayBuffer(file)\r\n    })\r\n    \r\n  }, [])\r\n  const {getRootProps, getInputProps} = useDropzone({onDrop})\r\n\r\n  // const myDropzone = new Dropzone(\"#my-form\");\r\n  // const output = document.querySelector(\"#output\");\r\n\r\n  if (document.getElementById('my-form')) {\r\n    var myDropzone = new Dropzone(\"#my-form\", { url: \"/file/post\"});\r\n    // other code here\r\n  }\r\n\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const [palylistCount,setPalylistCount] = useState();\r\n  const [VideosCount,setVideosCount] = useState();\r\n  useEffect(() => \r\n  {\r\n    const user_id = sessionStorage.getItem(\"user_id\");\r\n    const token = localStorage.getItem('token');\r\n\r\n    axios.get(process.env.REACT_APP_API_URL + \"/manageplaylist/getAlldata\").then((response) => { setPalylistCount(response.data.length); });\r\n    // Get All Videos Data\r\n    axios.get(process.env.REACT_APP_API_URL + \"/playlist_video/getAlldata\").then((response) => { setVideosCount(response.data.length); });\r\n\r\n\r\n  }, []);\r\n  \r\n  return (\r\n    <div className=\"card radius-10\">\r\n      <Dropzone onDrop={acceptedFiles => console.log(acceptedFiles)}>\r\n        {({getRootProps, getInputProps}) => (\r\n          <section>\r\n            <div {...getRootProps()}>\r\n              <input {...getInputProps()} />\r\n              <p>Drag 'n' drop some files here, or click to select files</p>\r\n            </div>\r\n          </section>\r\n        )}\r\n      </Dropzone>\r\n        \r\n        \r\n    </div>\r\n        \r\n      \r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}