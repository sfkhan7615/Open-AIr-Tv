{"ast":null,"code":"var _jsxFileName = \"/home/oatvadmin/public_html/admin/src/components/view/SpaceResImages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../../css/style.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport DataTable from \"react-data-table-component\";\nimport ArrowUpwardIcon from \"@mui/icons-material/ArrowUpward\";\nimport swal from \"sweetalert\";\nimport { useForm } from \"react-hook-form\";\nimport { Dropdown } from \"react-bootstrap\";\nimport Skeleton from \"@mui/material/Skeleton\";\nimport Stack from \"@mui/material/Stack\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst axios = require(\"axios\");\n\ntoast.configure();\n\nfunction SpaceResImages() {\n  _s();\n\n  const token = localStorage.getItem(\"token\"); // console.log(token);\n  // Featch All Data\n\n  const [allData, setallData] = useState([]);\n  useEffect(() => {\n    callData();\n  }, []);\n\n  function callData() {\n    axios.get(process.env.REACT_APP_API_URL + \"/user/getAlldata\", {\n      headers: {\n        Token: token\n      }\n    }).then(response => {\n      for (let index = 0; index < response.data.length; index++) {\n        response.data[index].id = index + 1;\n      }\n\n      setallData(response.data);\n    });\n  }\n\n  window.addEventListener(\"ready\", event => {\n    callData();\n  }); //  Delete PlayList\n\n  const onDelete = val => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this imaginary file!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true\n    }).then(willDelete => {\n      if (willDelete) {\n        axios.post(process.env.REACT_APP_API_URL + \"/user/delete\", {\n          id: val\n        }).then(res => {\n          toast.success(\"Delete Successfully\", {});\n          callData();\n        }).catch(err => {\n          if (err.response && err.response.data && err.response.data.errorMessage) {\n            toast.error(err.response.data.errorMessage, {});\n          }\n        });\n      }\n    });\n  }; //End Delete users\n\n\n  const columns = [{\n    id: 1,\n    name: \"S.no\",\n    selector: row => row.id,\n    sortable: true,\n    reorder: true\n  }, {\n    id: 2,\n    name: \"Email / Phone\",\n    selector: row => row.email,\n    sortable: true,\n    reorder: true\n  }, {\n    id: 3,\n    name: \"Username\",\n    selector: row => row.username,\n    sortable: true,\n    reorder: true\n  }, {\n    id: 4,\n    name: \"User Type\",\n    selector: row => row.role == 1 ? \"Admin\" : \"User\",\n    sortable: true,\n    right: true,\n    reorder: true\n  }, {\n    id: 5,\n    name: \"\",\n    // selector: (row) => row.role,\n    sortable: true,\n    right: true,\n    reorder: true\n  }, {\n    id: 6,\n    name: \"Action\",\n    button: true,\n    cell: row => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-sm btn-light\",\n        onClick: () => onDelete(row._id),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bx bx-trash me-0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setEmail(row.email);\n          setUserName(row.username);\n          setRole(row.role);\n          setUpdateId(row._id);\n          handleUserModelShow(\"update\");\n        },\n        className: \"btn btn-sm btn-light\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"lni lni-pencil-alt me-0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)\n  }, {\n    id: 6,\n    name: \"\",\n    // selector: (row) => row.role,\n    sortable: true,\n    right: true,\n    reorder: true\n  }];\n  const [addUsershow, SetaddUserModelshow] = useState(false);\n\n  const handleUserModelShow = opr => {\n    SetaddUserModelshow(true);\n    setOpration(opr);\n\n    if (opr === \"add\") {\n      setUserName(\"\");\n      setEmail(\"\");\n      setPassword(\"\");\n      setRole(\"\");\n    }\n  };\n\n  const handleUserClose = () => SetaddUserModelshow(false);\n\n  const [Passwordshow, SetPasswordModelshow] = useState(false);\n\n  const handlePasswordModelShow = opr => {\n    SetPasswordModelshow(true);\n    setOpration(opr);\n\n    if (opr === \"add\") {\n      setUserName(\"\");\n      setEmail(\"\");\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      setRole(\"\");\n    }\n  };\n\n  const handlePasswordClose = () => SetPasswordModelshow(false); //Verify User\n\n\n  const verifyUser = id => {\n    var data = id;\n    axios.post(process.env.REACT_APP_API_URL + \"/user/verify\", {\n      id: data\n    }).then(res => {\n      toast.success(\"Email Account Verify Successfully\");\n    }).catch(err => {\n      toast.error(\"Email Account Not verify\");\n    });\n  }; // End Verify User\n  // ////////////////////////\n  // Submit Users Data\n\n\n  const [opration, setOpration] = useState(\"\");\n  const [UserName, setUserName] = useState(\"\");\n  const [Password, setPassword] = useState(\"\");\n  const [ConfirmPassword, setConfirmPassword] = useState(\"\");\n  const [Role, setRole] = useState(\"\");\n  const [Email, setEmail] = useState(\"\"); // const [user, setuser] = useState(\"\");\n\n  const [updateUserId, setUpdateId] = useState(\"\");\n\n  const submitUserData = () => {\n    axios.post(process.env.REACT_APP_API_URL + \"/user/add\", {\n      username: UserName.toLowerCase(),\n      email: Email.toLowerCase(),\n      password: Password,\n      role: Role,\n      opration: opration,\n      id: updateUserId\n    }).then(res => {\n      handleUserClose();\n      callData();\n      if (opration !== \"update\") toast.success(\"Added Successfully\", {});else toast.success(\"Update Successfully\", {});\n    }).catch(err => {\n      if (err.response && err.response.data && err.response.data.errorMessage) {\n        toast.error(err.response.data.errorMessage, {});\n      }\n    });\n    callData();\n  };\n\n  const submitPasswordData = () => {\n    axios.post(process.env.REACT_APP_API_URL + \"/user/update_password\", {\n      password: Password,\n      confirmPassword: ConfirmPassword,\n      opration: opration,\n      id: updateUserId\n    }).then(res => {\n      callData();\n      if (opration !== \"changePassword\") toast.success(\"Added Successfully\", {});else toast.success(\"Update Successfully\", {});\n    }).catch(err => {\n      if (err.response && err.response.data && err.response.data.errorMessage) {\n        toast.error(err.response.data.errorMessage, {});\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(SpaceResImages, \"xgsXAVfDSPyGajfqKQFfcnBOAf4=\");\n\n_c = SpaceResImages;\nexport default SpaceResImages;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpaceResImages\");","map":{"version":3,"sources":["/home/oatvadmin/public_html/admin/src/components/view/SpaceResImages.js"],"names":["React","useState","useEffect","Modal","Button","useNavigate","ToastContainer","toast","DataTable","ArrowUpwardIcon","swal","useForm","Dropdown","Skeleton","Stack","axios","require","configure","SpaceResImages","token","localStorage","getItem","allData","setallData","callData","get","process","env","REACT_APP_API_URL","headers","Token","then","response","index","data","length","id","window","addEventListener","event","onDelete","val","title","text","icon","buttons","dangerMode","willDelete","post","res","success","catch","err","errorMessage","error","columns","name","selector","row","sortable","reorder","email","username","role","right","button","cell","_id","setEmail","setUserName","setRole","setUpdateId","handleUserModelShow","addUsershow","SetaddUserModelshow","opr","setOpration","setPassword","handleUserClose","Passwordshow","SetPasswordModelshow","handlePasswordModelShow","setConfirmPassword","handlePasswordClose","verifyUser","opration","UserName","Password","ConfirmPassword","Role","Email","updateUserId","submitUserData","toLowerCase","password","submitPasswordData","confirmPassword"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../../css/style.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport ArrowUpwardIcon from \"@mui/icons-material/ArrowUpward\";\r\nimport swal from \"sweetalert\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\nimport Stack from \"@mui/material/Stack\";\r\nconst axios = require(\"axios\");\r\ntoast.configure();\r\n\r\nfunction SpaceResImages() {\r\n  const token = localStorage.getItem(\"token\");\r\n  // console.log(token);\r\n  // Featch All Data\r\n  const [allData, setallData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    callData();\r\n  }, []);\r\n\r\n  function callData() {\r\n    axios\r\n      .get(process.env.REACT_APP_API_URL + \"/user/getAlldata\", {\r\n        headers: { Token: token },\r\n      })\r\n      .then((response) => {\r\n        for (let index = 0; index < response.data.length; index++) {\r\n          response.data[index].id = index + 1;\r\n        }\r\n        setallData(response.data);\r\n      });\r\n  }\r\n\r\n  window.addEventListener(\"ready\", (event) => {\r\n    callData();\r\n  });\r\n\r\n  //  Delete PlayList\r\n  const onDelete = (val) => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this imaginary file!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        axios\r\n          .post(process.env.REACT_APP_API_URL + \"/user/delete\", { id: val })\r\n          .then((res) => {\r\n            toast.success(\"Delete Successfully\", {});\r\n            callData();\r\n          })\r\n          .catch((err) => {\r\n            if (\r\n              err.response &&\r\n              err.response.data &&\r\n              err.response.data.errorMessage\r\n            ) {\r\n              toast.error(err.response.data.errorMessage, {});\r\n            }\r\n          });\r\n      }\r\n    });\r\n  };\r\n  //End Delete users\r\n\r\n  const columns = [\r\n    {\r\n      id: 1,\r\n      name: \"S.no\",\r\n      selector: (row) => row.id,\r\n      sortable: true,\r\n      reorder: true,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Email / Phone\",\r\n      selector: (row) => row.email,\r\n      sortable: true,\r\n      reorder: true,\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Username\",\r\n      selector: (row) => row.username,\r\n      sortable: true,\r\n      reorder: true,\r\n    },\r\n\r\n    {\r\n      id: 4,\r\n      name: \"User Type\",\r\n      selector: (row) => (row.role == 1 ? \"Admin\" : \"User\"),\r\n      sortable: true,\r\n      right: true,\r\n      reorder: true,\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"\",\r\n      // selector: (row) => row.role,\r\n      sortable: true,\r\n      right: true,\r\n      reorder: true,\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Action\",\r\n      button: true,\r\n      cell: (row) => (\r\n        <React.Fragment>\r\n          <button\r\n            className=\"btn btn-sm btn-light\"\r\n            onClick={() => onDelete(row._id)}\r\n          >\r\n            <i className=\"bx bx-trash me-0\"></i>\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            onClick={() => {\r\n              setEmail(row.email);\r\n              setUserName(row.username);\r\n              setRole(row.role);\r\n              setUpdateId(row._id);\r\n              handleUserModelShow(\"update\");\r\n            }}\r\n            className=\"btn btn-sm btn-light\"\r\n          >\r\n            <i className=\"lni lni-pencil-alt me-0\"></i>\r\n          </button>\r\n        </React.Fragment>\r\n      ),\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"\",\r\n      // selector: (row) => row.role,\r\n      sortable: true,\r\n      right: true,\r\n      reorder: true,\r\n    },\r\n  ];\r\n\r\n  const [addUsershow, SetaddUserModelshow] = useState(false);\r\n  const handleUserModelShow = (opr) => {\r\n    SetaddUserModelshow(true);\r\n    setOpration(opr);\r\n    if (opr === \"add\") {\r\n      setUserName(\"\");\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n      setRole(\"\");\r\n    }\r\n  };\r\n  const handleUserClose = () => SetaddUserModelshow(false);\r\n\r\n  const [Passwordshow, SetPasswordModelshow] = useState(false);\r\n  const handlePasswordModelShow = (opr) => {\r\n    SetPasswordModelshow(true);\r\n    setOpration(opr);\r\n    if (opr === \"add\") {\r\n      setUserName(\"\");\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      setRole(\"\");\r\n    }\r\n  };\r\n  const handlePasswordClose = () => SetPasswordModelshow(false);\r\n\r\n  //Verify User\r\n  const verifyUser = (id) => {\r\n    var data = id;\r\n    axios\r\n      .post(process.env.REACT_APP_API_URL + \"/user/verify\", {\r\n        id: data,\r\n      })\r\n      .then((res) => {\r\n        toast.success(\"Email Account Verify Successfully\");\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"Email Account Not verify\");\r\n      });\r\n  };\r\n\r\n  // End Verify User\r\n\r\n  // ////////////////////////\r\n  // Submit Users Data\r\n  const [opration, setOpration] = useState(\"\");\r\n  const [UserName, setUserName] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n  const [ConfirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [Role, setRole] = useState(\"\");\r\n  const [Email, setEmail] = useState(\"\");\r\n  // const [user, setuser] = useState(\"\");\r\n  const [updateUserId, setUpdateId] = useState(\"\");\r\n  const submitUserData = () => {\r\n    axios\r\n      .post(process.env.REACT_APP_API_URL + \"/user/add\", {\r\n        username: UserName.toLowerCase(),\r\n        email: Email.toLowerCase(),\r\n        password: Password,\r\n        role: Role,\r\n        opration: opration,\r\n        id: updateUserId,\r\n      })\r\n      .then((res) => {\r\n        handleUserClose();\r\n        callData();\r\n        if (opration !== \"update\") toast.success(\"Added Successfully\", {});\r\n        else toast.success(\"Update Successfully\", {});\r\n      })\r\n      .catch((err) => {\r\n        if (\r\n          err.response &&\r\n          err.response.data &&\r\n          err.response.data.errorMessage\r\n        ) {\r\n          toast.error(err.response.data.errorMessage, {});\r\n        }\r\n      });\r\n    callData();\r\n  };\r\n\r\n  const submitPasswordData = () => {\r\n    axios\r\n      .post(process.env.REACT_APP_API_URL + \"/user/update_password\", {\r\n        password: Password,\r\n        confirmPassword: ConfirmPassword,\r\n        opration: opration,\r\n        id: updateUserId,\r\n      })\r\n      .then((res) => {\r\n        callData();\r\n        if (opration !== \"changePassword\")\r\n          toast.success(\"Added Successfully\", {});\r\n        else toast.success(\"Update Successfully\", {});\r\n      })\r\n      .catch((err) => {\r\n        if (\r\n          err.response &&\r\n          err.response.data &&\r\n          err.response.data.errorMessage\r\n        ) {\r\n          toast.error(err.response.data.errorMessage, {});\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n        <div className=\"row-6\">\r\n        <label>Select Page</label>\r\n          <select>\r\n            <option></option>\r\n            <option></option>\r\n            <option></option>\r\n            <option></option>\r\n          </select>\r\n        </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SpaceResImages;\r\n"]},"metadata":{},"sourceType":"module"}