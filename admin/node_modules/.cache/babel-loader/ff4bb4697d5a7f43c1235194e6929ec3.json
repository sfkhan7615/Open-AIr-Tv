{"ast":null,"code":"var _jsxFileName = \"/home/oatvadmin/public_html/admin/src/components/view/ManagePlayList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport '../../css/style.css';\nimport DataTable from \"react-data-table-component\";\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport swal from 'sweetalert';\nimport { Dropdown } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\ntoast.configure();\n\nfunction ManagePlayList() {\n  _s();\n\n  const [allData, setallData] = useState([]);\n\n  function callData() {\n    axios.get(process.env.REACT_APP_API_URL + \"/manageplaylist/getAlldata\").then(response => {\n      for (let index = 0; index < response.data.length; index++) response.data[index].id = index + 1;\n\n      setallData(response.data);\n    });\n  }\n\n  useEffect(() => {\n    callData();\n    document.getElementsByClassName('page-content')[0].style.padding = \"1.5rem 1.5rem 0 1.5rem\";\n  }, []); //  Delete PlayList\n\n  const deletePlayList = id => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this imaginary file!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true\n    }).then(willDelete => {\n      if (willDelete) {\n        axios.post(process.env.REACT_APP_API_URL + '/manageplaylist/delete', {\n          ids: id\n        }).then(res => {\n          toast.success(\"Delete Successfully\", {});\n          callData();\n        }).catch(err => {\n          if (err.response && err.response.data && err.response.data.errorMessage) {\n            toast.error(err.response.data.errorMessage, {});\n          }\n        });\n      }\n    });\n  };\n\n  const columns = [{\n    id: 1,\n    name: 'S.no',\n    selector: row => row.id,\n    sortable: true,\n    reorder: true\n  }, {\n    id: 2,\n    name: \"Title\",\n    selector: row => row.title,\n    sortable: true,\n    reorder: true\n  }, {\n    id: 3,\n    name: \"Videos\",\n    button: true,\n    cell: row => /*#__PURE__*/_jsxDEV(\"i\", {\n      children: \"Active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 57\n    }, this)\n  }, {\n    id: 4,\n    name: \"\",\n    cell: row => \"\"\n  }, {\n    id: 5,\n    name: \"Action\",\n    button: true,\n    cell: row => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => deletePlayList(row._id),\n        className: \"btn btn-sm btn-light\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bx bx-trash me-0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 87\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 6\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          setuser(row.user);\n          setPlayListName(row.title);\n          setUpdateId(row._id);\n          handlePlaylistModelShow(\"update\");\n        },\n        className: \"btn btn-sm btn-light\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"lni lni-pencil-alt me-0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 171\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 6\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Dropdown, {\n        id: \"drop\",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          variant: \"btn-light btn btn-sm\",\n          id: \"dropdown-basic\",\n          style: {\n            color: '#fff'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => {\n              setUpdateId(row._id);\n              verifyUser(row._id);\n            },\n            children: \"Export Csv\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)\n  }];\n  const [addPlayListModelshow, SetaddPlayListModelshow] = useState(false);\n\n  const handlePlaylistModelShow = opr => {\n    SetaddPlayListModelshow(true);\n    setOpration(opr);\n    if (opr == \"add\") setPlayListName(\"\");\n  };\n\n  const handlePlaylistModelClose = () => SetaddPlayListModelshow(false); // ////////////////////////\n  // Submit Playlist Data\n\n\n  const [opration, setOpration] = useState('');\n  const [playListName, setPlayListName] = useState(\"\");\n  const [user, setuser] = useState(\"\");\n  const [updatePlaylistId, setUpdateId] = useState(\"\");\n\n  const submitPlaylistData = () => {\n    axios.post(process.env.REACT_APP_API_URL + '/manageplaylist/add', {\n      title: playListName,\n      opration: opration,\n      id: updatePlaylistId,\n      user: JSON.parse(sessionStorage.getItem(\"userDetails\")).user_id\n    }).then(res => {\n      if (opration == \"add\") toast.success(\"Added Successfully\", {});else toast.success(\"Update Successfully\", {});\n      callData();\n    }).catch(err => {\n      if (err.response && err.response.data && err.response.data.errorMessage) {\n        toast.error(err.response.data.errorMessage, {});\n      }\n    });\n  };\n\n  const [uploadProfileLoader, setUploadProfileLoader] = useState(false);\n\n  const uploadFile = event => {\n    setUploadProfileLoader(true);\n    const formdata = new FormData();\n    formdata.append(\"avtar\", event.target.files[0]);\n    formdata.append(\"id\", updatePlaylistId);\n    console.log(formdata);\n    axios.post(process.env.REACT_APP_API_URL + \"/manageplaylist/importCsv\", formdata, {\n      user: JSON.parse(sessionStorage.getItem(\"userDetails\")).user_id\n    }, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(res => {\n      if (res.data.length != 0) setUploadProfileLoader(false);\n      toast.success(\"Added Successfully\", {});\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        className: \"col-12 text-right\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handlePlaylistModelShow(\"add\"),\n          style: {\n            position: 'absolute',\n            right: '0%'\n          },\n          className: \"btn btn-light float-right my-2\",\n          variant: \"primary\",\n          children: \"Add Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          method: \"post\",\n          encType: \"multipart/form-data\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => uploadFile(e),\n            type: \"file\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card p-3\",\n        style: {\n          overflow: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          style: {\n            background: 'transparent'\n          },\n          title: \"Playlists\",\n          columns: columns,\n          data: allData,\n          defaultSortFieldId: 1,\n          sortIcon: /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 139\n          }, this),\n          pagination: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: addPlayListModelshow,\n      onHide: handlePlaylistModelClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"row g-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              id: \"show_hide_password\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                value: playListName != \"\" ? playListName : \"\",\n                onChange: e => setPlayListName(e.target.value),\n                type: \"text\",\n                className: \"form-control border-end-0\",\n                id: \"inputChoosePassword\",\n                placeholder: \"Enter Playlist Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handlePlaylistModelClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          onClick: () => {\n            submitPlaylistData();\n            handlePlaylistModelClose();\n          },\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ManagePlayList, \"76IOfFFMJOAYp9hznhoC9NopzCU=\");\n\n_c = ManagePlayList;\nexport default ManagePlayList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManagePlayList\");","map":{"version":3,"sources":["/home/oatvadmin/public_html/admin/src/components/view/ManagePlayList.js"],"names":["React","useState","useEffect","DataTable","ArrowUpwardIcon","Link","toast","Modal","Button","swal","Dropdown","axios","require","configure","ManagePlayList","allData","setallData","callData","get","process","env","REACT_APP_API_URL","then","response","index","data","length","id","document","getElementsByClassName","style","padding","deletePlayList","title","text","icon","buttons","dangerMode","willDelete","post","ids","res","success","catch","err","errorMessage","error","columns","name","selector","row","sortable","reorder","button","cell","_id","setuser","user","setPlayListName","setUpdateId","handlePlaylistModelShow","color","verifyUser","addPlayListModelshow","SetaddPlayListModelshow","opr","setOpration","handlePlaylistModelClose","opration","playListName","updatePlaylistId","submitPlaylistData","JSON","parse","sessionStorage","getItem","user_id","uploadProfileLoader","setUploadProfileLoader","uploadFile","event","formdata","FormData","append","target","files","console","log","headers","position","right","e","overflow","background","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../../css/style.css';\nimport DataTable from \"react-data-table-component\";\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport swal from 'sweetalert';\nimport { Dropdown } from \"react-bootstrap\";\n\nconst axios = require('axios');\ntoast.configure();\n\nfunction ManagePlayList() {\n\n\tconst [allData, setallData] = useState([]);\n\tfunction callData() {\n\t\taxios.get(process.env.REACT_APP_API_URL + \"/manageplaylist/getAlldata\").then((response) => {\n\t\t\tfor (let index = 0; index < response.data.length; index++)\n\t\t\t\tresponse.data[index].id = index+1;\n\t\t\tsetallData(response.data);\n\t\t});\n\t}\n\tuseEffect(() => {\n\t\tcallData();\n\t\tdocument.getElementsByClassName('page-content')[0].style.padding = \"1.5rem 1.5rem 0 1.5rem\";\n\t}, [])\n\t//  Delete PlayList\n\tconst deletePlayList = (id) => {\n\t\tswal({\n\t\t\ttitle: \"Are you sure?\",\n\t\t\ttext: \"Once deleted, you will not be able to recover this imaginary file!\",\n\t\t\ticon: \"warning\",\n\t\t\tbuttons: true,\n\t\t\tdangerMode: true,\n\t\t}).then((willDelete) => {\n\t\t\tif (willDelete) {\n\t\t\t\taxios.post(process.env.REACT_APP_API_URL + '/manageplaylist/delete', { ids: id }).then((res) => {\n\t\t\t\t\ttoast.success(\"Delete Successfully\", {});\n\t\t\t\t\tcallData();\n\t\t\t\t}).catch((err) => {\n\t\t\t\t\tif (err.response && err.response.data && err.response.data.errorMessage) {\n\t\t\t\t\t\ttoast.error(err.response.data.errorMessage, {});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\tconst columns = [\n\t\t{ id: 1, name: 'S.no', selector: (row) => row.id, sortable: true, reorder: true },\n\t\t{ id: 2, name: \"Title\", selector: (row) => row.title, sortable: true, reorder: true },\n\t\t{ id: 3, name: \"Videos\", button: true, cell: (row) => <i>Active</i> },\n\t\t{ id: 4, name: \"\", cell: (row) => \"\" },\n\t\t{\n\t\t\tid: 5, name: \"Action\", button: true, cell: (row) =>\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<Button onClick={() => deletePlayList(row._id)} className=\"btn btn-sm btn-light\"><i className=\"bx bx-trash me-0\" ></i></Button>&nbsp;\n\t\t\t\t\t<Button onClick={() => { setuser(row.user); setPlayListName(row.title); setUpdateId(row._id); handlePlaylistModelShow(\"update\"); }} className=\"btn btn-sm btn-light\"><i className=\"lni lni-pencil-alt me-0\"></i></Button>\n\t\t\t\t\t&nbsp;\n          <Dropdown id=\"drop\">\n            <Dropdown.Toggle variant=\"btn-light btn btn-sm\" id=\"dropdown-basic\" style={{color:'#fff'}}>\n              {/* <i className=\"lni lni-more me-0\"></i> */}\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n              <Dropdown.Item onClick={() => {\n                  setUpdateId(row._id);\n                  verifyUser(row._id);\n                }}>Export Csv</Dropdown.Item>\n              {/* <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>  */}\n            </Dropdown.Menu>\n          </Dropdown>\n\t\t\t\t\t</React.Fragment>,\n\t\t}\n\t];\n\tconst [addPlayListModelshow, SetaddPlayListModelshow] = useState(false);\n\tconst handlePlaylistModelShow = (opr) => {\n\t\tSetaddPlayListModelshow(true);\n\t\tsetOpration(opr);\n\t\tif (opr == \"add\")\n\t\t\tsetPlayListName(\"\");\n\t}\n\tconst handlePlaylistModelClose = () => SetaddPlayListModelshow(false);\n\t// ////////////////////////\n\t// Submit Playlist Data\n\tconst [opration, setOpration] = useState('');\n\tconst [playListName, setPlayListName] = useState(\"\");\n\tconst [user, setuser] = useState(\"\");\n\tconst [updatePlaylistId, setUpdateId] = useState(\"\");\n\tconst submitPlaylistData = () => {\n\t\taxios.post(process.env.REACT_APP_API_URL + '/manageplaylist/add', {\n\t\t\ttitle: playListName,\n\t\t\topration: opration,\n\t\t\tid: updatePlaylistId,\n\t\t\tuser:JSON.parse(sessionStorage.getItem(\"userDetails\")).user_id,\n\t\t}).then((res) => {\n\t\t\tif (opration == \"add\")\n\t\t\ttoast.success(\"Added Successfully\", {});\n\t\t\telse\n\t\t\ttoast.success(\"Update Successfully\", {});\n\t\t\tcallData();\n\t\t}).catch((err) => {\n\t\t\tif (err.response && err.response.data && err.response.data.errorMessage) {\n\t\t\t\ttoast.error(err.response.data.errorMessage, {});\n\t\t\t}\n\t\t});\n\t}\n\n\tconst [uploadProfileLoader, setUploadProfileLoader] = useState(false);\n  const uploadFile = (event) => {\n    setUploadProfileLoader(true);\n\n    const formdata = new FormData();\n    formdata.append(\"avtar\", event.target.files[0]);\n\tformdata.append(\"id\",updatePlaylistId);\n\tconsole.log(formdata);\n    axios\n      .post(\n        process.env.REACT_APP_API_URL + \"/manageplaylist/importCsv\",\n        formdata,\n        { user: JSON.parse(sessionStorage.getItem(\"userDetails\")).user_id },\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            \"Access-Control-Allow-Origin\": \"*\",\n          },\n        }\n      )\n      .then((res) => {\n        if (res.data.length != 0) setUploadProfileLoader(false);\n        toast.success(\"Added Successfully\", {});\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\treturn (\n\t\t<>\n\t\t\t<div className=\"col\">\n\n\t\t\t\t\n\t\t\t\t<div style={{ position: 'relative' }} className='col-12 text-right'>\n\t\t\t\t\t<Button onClick={() => handlePlaylistModelShow(\"add\")} style={{ position: 'absolute', right: '0%' }} className=\"btn btn-light float-right my-2\" variant=\"primary\">\n\t\t\t\t\t\tAdd Playlist\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t<br />\n\t\t\t\t<div className='col-3'>\n\t\t\t\t<form\n                  action=\"\"\n                  method=\"post\"\n                  encType=\"multipart/form-data\" \n                >\n\t\t\t\t\t\t<input onChange={(e) => uploadFile(e)} type=\"file\" className='form-control'/>\n\t\t\t\t\t</form>\n\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t<div className=\"card p-3\" style={{ overflow: 'auto' }}>\n\t\t\t\t\t<DataTable style={{ background: 'transparent' }} title=\"Playlists\" columns={columns} data={allData} defaultSortFieldId={1} sortIcon={<ArrowUpwardIcon />} pagination />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{/* Add Data Model */}\n\t\t\t<Modal show={addPlayListModelshow} onHide={handlePlaylistModelClose}>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>Add Playlist</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<form className=\"row g-3\">\n\t\t\t\t\t\t<div className=\"col-12\">\n\t\t\t\t\t\t\t<label className=\"form-label\">Title</label>\n\t\t\t\t\t\t\t<div className=\"input-group\" id=\"show_hide_password\">\n\t\t\t\t\t\t\t\t<input value={\n\t\t\t\t\t\t\t\t\tplayListName != \"\" ? playListName : \"\"\n\t\t\t\t\t\t\t\t} onChange={e => setPlayListName(e.target.value)} type=\"text\" className=\"form-control border-end-0\" id=\"inputChoosePassword\" placeholder=\"Enter Playlist Title\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button variant=\"secondary\" onClick={handlePlaylistModelClose}>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button type='submit' variant=\"primary\" onClick={() => { submitPlaylistData(); handlePlaylistModelClose(); }}>\n\t\t\t\t\t\tAdd\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</>\n\t)\n}\nexport default ManagePlayList"]},"metadata":{},"sourceType":"module"}