{"ast":null,"code":"var _jsxFileName = \"/home/oatvadmin/public_html/admin/src/components/view/SpaceResImages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Dropzone from \"react-dropzone\";\nimport \"dropzone/dist/dropzone.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nfunction Dashboard() {\n  _s();\n\n  // const myDropzone = new Dropzone(\"#my-form\");\n  // const output = document.querySelector(\"#output\");\n  if (document.getElementById('my-form')) {\n    var myDropzone = new Dropzone(\"#my-form\", {\n      url: \"/file/post\"\n    }); // other code here\n  }\n\n  const navigate = useNavigate();\n  const [palylistCount, setPalylistCount] = useState();\n  const [VideosCount, setVideosCount] = useState();\n  useEffect(() => {\n    const user_id = sessionStorage.getItem(\"user_id\");\n    const token = localStorage.getItem('token');\n    axios.get(process.env.REACT_APP_API_URL + \"/manageplaylist/getAlldata\").then(response => {\n      setPalylistCount(response.data.length);\n    }); // Get All Videos Data\n\n    axios.get(process.env.REACT_APP_API_URL + \"/playlist_video/getAlldata\").then(response => {\n      setVideosCount(response.data.length);\n    });\n  }, []);\n  Dropzone.options.uploadForm = {\n    // The camelized version of the ID of the form element\n    // The configuration we've talked about above\n    autoProcessQueue: false,\n    uploadMultiple: true,\n    parallelUploads: 100,\n    maxFiles: 100,\n    // The setting up of the dropzone\n    init: function () {\n      var myDropzone = this; // First change the button to actually tell Dropzone to process the queue.\n\n      this.element.querySelector(\"button[type=submit]\").addEventListener(\"click\", function (e) {\n        // Make sure that the form isn't actually being sent.\n        e.preventDefault();\n        e.stopPropagation();\n        myDropzone.processQueue();\n      }); // Listen to the sendingmultiple event. In this case, it's the sendingmultiple event instead\n      // of the sending event because uploadMultiple is set to true.\n\n      this.on(\"sendingmultiple\", function () {// Gets triggered when the form is actually being sent.\n        // Hide the success button or the complete form.\n      });\n      this.on(\"successmultiple\", function (files, response) {// Gets triggered when the files have successfully been sent.\n        // Redirect user or notify of success.\n      });\n      this.on(\"errormultiple\", function (files, response) {// Gets triggered when there was an error sending the files.\n        // Maybe show form again, and notify user of error\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card radius-10\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"upload-form\",\n      class: \"dropzone\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"previews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit data and files!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"0JTlfD/sb8nSxiemNFkOBKpF7RI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/oatvadmin/public_html/admin/src/components/view/SpaceResImages.js"],"names":["React","useEffect","useState","useNavigate","Dropzone","axios","require","Dashboard","document","getElementById","myDropzone","url","navigate","palylistCount","setPalylistCount","VideosCount","setVideosCount","user_id","sessionStorage","getItem","token","localStorage","get","process","env","REACT_APP_API_URL","then","response","data","length","options","uploadForm","autoProcessQueue","uploadMultiple","parallelUploads","maxFiles","init","element","querySelector","addEventListener","e","preventDefault","stopPropagation","processQueue","on","files"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,4BAAP;;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AAEnB;AACA;AAEA,MAAIC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAJ,EAAwC;AACtC,QAAIC,UAAU,GAAG,IAAIN,QAAJ,CAAa,UAAb,EAAyB;AAAEO,MAAAA,GAAG,EAAE;AAAP,KAAzB,CAAjB,CADsC,CAEtC;AACD;;AAED,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAGA,QAAM,CAACU,aAAD,EAAeC,gBAAf,IAAmCZ,QAAQ,EAAjD;AACA,QAAM,CAACa,WAAD,EAAaC,cAAb,IAA+Bd,QAAQ,EAA7C;AACAD,EAAAA,SAAS,CAAC,MACV;AACE,UAAMgB,OAAO,GAAGC,cAAc,CAACC,OAAf,CAAuB,SAAvB,CAAhB;AACA,UAAMC,KAAK,GAAGC,YAAY,CAACF,OAAb,CAAqB,OAArB,CAAd;AAEAd,IAAAA,KAAK,CAACiB,GAAN,CAAUC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAAgC,4BAA1C,EAAwEC,IAAxE,CAA8EC,QAAD,IAAc;AAAEb,MAAAA,gBAAgB,CAACa,QAAQ,CAACC,IAAT,CAAcC,MAAf,CAAhB;AAAyC,KAAtI,EAJF,CAKE;;AACAxB,IAAAA,KAAK,CAACiB,GAAN,CAAUC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAAgC,4BAA1C,EAAwEC,IAAxE,CAA8EC,QAAD,IAAc;AAAEX,MAAAA,cAAc,CAACW,QAAQ,CAACC,IAAT,CAAcC,MAAf,CAAd;AAAuC,KAApI;AAGD,GAVQ,EAUN,EAVM,CAAT;AAWAzB,EAAAA,QAAQ,CAAC0B,OAAT,CAAiBC,UAAjB,GAA8B;AAAE;AAE9B;AACAC,IAAAA,gBAAgB,EAAE,KAHU;AAI5BC,IAAAA,cAAc,EAAE,IAJY;AAK5BC,IAAAA,eAAe,EAAE,GALW;AAM5BC,IAAAA,QAAQ,EAAE,GANkB;AAQ5B;AACAC,IAAAA,IAAI,EAAE,YAAW;AACf,UAAI1B,UAAU,GAAG,IAAjB,CADe,CAGf;;AACA,WAAK2B,OAAL,CAAaC,aAAb,CAA2B,qBAA3B,EAAkDC,gBAAlD,CAAmE,OAAnE,EAA4E,UAASC,CAAT,EAAY;AACtF;AACAA,QAAAA,CAAC,CAACC,cAAF;AACAD,QAAAA,CAAC,CAACE,eAAF;AACAhC,QAAAA,UAAU,CAACiC,YAAX;AACD,OALD,EAJe,CAWf;AACA;;AACA,WAAKC,EAAL,CAAQ,iBAAR,EAA2B,YAAW,CACpC;AACA;AACD,OAHD;AAIA,WAAKA,EAAL,CAAQ,iBAAR,EAA2B,UAASC,KAAT,EAAgBlB,QAAhB,EAA0B,CACnD;AACA;AACD,OAHD;AAIA,WAAKiB,EAAL,CAAQ,eAAR,EAAyB,UAASC,KAAT,EAAgBlB,QAAhB,EAA0B,CACjD;AACA;AACD,OAHD;AAID;AAlC2B,GAA9B;AAqCA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE;AAAM,MAAA,EAAE,EAAC,aAAT;AAAuB,MAAA,KAAK,EAAC,UAA7B;AAAA,8BAEJ;AAAK,QAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,cAFI,eAKJ;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,cALI,eAMJ;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cANI,eAQJ;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARI;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAjFQpB,S;UAUUJ,W;;;KAVVI,S;AAmFT,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport \"dropzone/dist/dropzone.css\";\r\n\r\nconst axios = require('axios');\r\n\r\nfunction Dashboard() {\r\n\r\n  // const myDropzone = new Dropzone(\"#my-form\");\r\n  // const output = document.querySelector(\"#output\");\r\n\r\n  if (document.getElementById('my-form')) {\r\n    var myDropzone = new Dropzone(\"#my-form\", { url: \"/file/post\"});\r\n    // other code here\r\n  }\r\n\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const [palylistCount,setPalylistCount] = useState();\r\n  const [VideosCount,setVideosCount] = useState();\r\n  useEffect(() => \r\n  {\r\n    const user_id = sessionStorage.getItem(\"user_id\");\r\n    const token = localStorage.getItem('token');\r\n\r\n    axios.get(process.env.REACT_APP_API_URL + \"/manageplaylist/getAlldata\").then((response) => { setPalylistCount(response.data.length); });\r\n    // Get All Videos Data\r\n    axios.get(process.env.REACT_APP_API_URL + \"/playlist_video/getAlldata\").then((response) => { setVideosCount(response.data.length); });\r\n\r\n\r\n  }, []);\r\n  Dropzone.options.uploadForm = { // The camelized version of the ID of the form element\r\n\r\n    // The configuration we've talked about above\r\n    autoProcessQueue: false,\r\n    uploadMultiple: true,\r\n    parallelUploads: 100,\r\n    maxFiles: 100,\r\n  \r\n    // The setting up of the dropzone\r\n    init: function() {\r\n      var myDropzone = this;\r\n  \r\n      // First change the button to actually tell Dropzone to process the queue.\r\n      this.element.querySelector(\"button[type=submit]\").addEventListener(\"click\", function(e) {\r\n        // Make sure that the form isn't actually being sent.\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        myDropzone.processQueue();\r\n      });\r\n  \r\n      // Listen to the sendingmultiple event. In this case, it's the sendingmultiple event instead\r\n      // of the sending event because uploadMultiple is set to true.\r\n      this.on(\"sendingmultiple\", function() {\r\n        // Gets triggered when the form is actually being sent.\r\n        // Hide the success button or the complete form.\r\n      });\r\n      this.on(\"successmultiple\", function(files, response) {\r\n        // Gets triggered when the files have successfully been sent.\r\n        // Redirect user or notify of success.\r\n      });\r\n      this.on(\"errormultiple\", function(files, response) {\r\n        // Gets triggered when there was an error sending the files.\r\n        // Maybe show form again, and notify user of error\r\n      });\r\n    }\r\n   \r\n  }\r\n  return (\r\n    <div className=\"card radius-10\">\r\n      <form id=\"upload-form\" class=\"dropzone\">\r\n  \r\n  <div class=\"previews\"></div>\r\n  \r\n  \r\n  <input type=\"email\" name=\"username\" />\r\n  <input type=\"password\" name=\"password\" />\r\n\r\n  <button type=\"submit\">Submit data and files!</button>\r\n</form>\r\n        \r\n        \r\n    </div>\r\n        \r\n      \r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}