{"ast":null,"code":"var _jsxFileName = \"/home/oatvadmin/public_html/admin/src/components/view/ManagePlayList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../../css/style.css\";\nimport DataTable from \"react-data-table-component\";\nimport ArrowUpwardIcon from \"@mui/icons-material/ArrowUpward\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport swal from \"sweetalert\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst axios = require(\"axios\");\n\ntoast.configure();\n\nfunction ManagePlayList() {\n  _s();\n\n  const [allData, setallData] = useState([]);\n\n  function callData() {\n    axios.get(process.env.REACT_APP_API_URL + \"/manageplaylist/getAlldata\").then(response => {\n      for (let index = 0; index < response.data.length; index++) response.data[index].id = index + 1;\n\n      setallData(response.data);\n    });\n  }\n\n  useEffect(() => {\n    callData();\n    document.getElementsByClassName(\"page-content\")[0].style.padding = \"1.5rem 1.5rem 0 1.5rem\";\n  }, []); //  Delete PlayList\n\n  const deletePlayList = id => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this imaginary file!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true\n    }).then(willDelete => {\n      if (willDelete) {\n        axios.post(process.env.REACT_APP_API_URL + \"/manageplaylist/delete\", {\n          ids: id\n        }).then(res => {\n          toast.success(\"Delete Successfully\", {});\n          callData();\n        }).catch(err => {\n          if (err.response && err.response.data && err.response.data.errorMessage) {\n            toast.error(err.response.data.errorMessage, {});\n          }\n        });\n      }\n    });\n  };\n\n  const columns = [{\n    id: 1,\n    name: \"S.no\",\n    selector: row => row.id,\n    sortable: true,\n    reorder: true\n  }, {\n    id: 2,\n    name: \"Title\",\n    selector: row => row.title,\n    sortable: true,\n    reorder: true\n  }, {\n    id: 3,\n    name: \"Videos\",\n    button: true,\n    cell: row => /*#__PURE__*/_jsxDEV(\"i\", {\n      children: \"Active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 59\n    }, this)\n  }, // { id: 4, name: \"\", cell: (row) => \"\" },\n  {\n    id: 4,\n    name: \"Action\",\n    button: true,\n    cell: row => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => deletePlayList(row._id),\n        className: \"btn btn-sm btn-light\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bx bx-trash me-0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          setuser(row.user);\n          setPlayListName(row.title);\n          setUpdateId(row._id);\n          handlePlaylistModelShow(\"update\");\n        },\n        className: \"btn btn-sm btn-light\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"lni lni-pencil-alt me-0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), \"\\xA0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)\n  }, {\n    id: 5,\n    name: \"\",\n    cell: row => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn btn-sm btn-light\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"lni lni-cloud-upload me-0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          opacity: \"0\",\n          zIndex: \"1\",\n          position: \"absolute\",\n          width: \"40px\"\n        },\n        accept: \".csv\",\n        onChange: e => {\n          uploadFile(e);\n          setUpdateId(row._id);\n        },\n        type: \"file\",\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }];\n  const [addPlayListModelshow, SetaddPlayListModelshow] = useState(false);\n\n  const handlePlaylistModelShow = opr => {\n    SetaddPlayListModelshow(true);\n    setOpration(opr);\n    if (opr == \"add\") setPlayListName(\"\");\n  };\n\n  const handlePlaylistModelClose = () => SetaddPlayListModelshow(false); // ////////////////////////\n  // Submit Playlist Data\n\n\n  const [opration, setOpration] = useState(\"\");\n  const [playListName, setPlayListName] = useState(\"\");\n  const [user, setuser] = useState(\"\");\n  const [updatePlaylistId, setUpdateId] = useState(\"\");\n\n  const submitPlaylistData = () => {\n    axios.post(process.env.REACT_APP_API_URL + \"/manageplaylist/add\", {\n      title: playListName,\n      opration: opration,\n      id: updatePlaylistId,\n      user: JSON.parse(sessionStorage.getItem(\"userDetails\")).user_id\n    }).then(res => {\n      if (opration == \"add\") toast.success(\"Added Successfully\", {});else toast.success(\"Update Successfully\", {});\n      callData();\n    }).catch(err => {\n      if (err.response && err.response.data && err.response.data.errorMessage) {\n        toast.error(err.response.data.errorMessage, {});\n      }\n    });\n  };\n\n  const [uploadProfileLoader, setUploadProfileLoader] = useState(false);\n\n  const uploadFile = event => {\n    setUploadProfileLoader(true);\n    const formdata = new FormData();\n    formdata.append(\"avtar\", event.target.files[0]);\n    formdata.append(\"userId\", JSON.parse(sessionStorage.getItem(\"userDetails\")).user_id);\n    console.log(formdata);\n    axios.post(process.env.REACT_APP_API_URL + \"/playlist/importCsv\", formdata, {\n      userId: JSON.parse(sessionStorage.getItem(\"userDetails\")).user_id\n    }, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(res => {\n      if (res.data.length != 0) setUploadProfileLoader(false);\n      toast.success(\"File Imported Successfully\", {});\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\"\n        },\n        className: \"col-12 text-right\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handlePlaylistModelShow(\"add\"),\n          style: {\n            position: \"absolute\",\n            right: \"0%\"\n          },\n          className: \"btn btn-light float-right my-2\",\n          variant: \"primary\",\n          children: \"Add Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card p-3\",\n        style: {\n          overflow: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          style: {\n            background: \"transparent\"\n          },\n          title: \"Playlists\",\n          columns: columns,\n          data: allData,\n          defaultSortFieldId: 1,\n          sortIcon: /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 23\n          }, this),\n          pagination: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: addPlayListModelshow,\n      onHide: handlePlaylistModelClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: opration == \"add\" ? \"Add Playlist\" : \"Edit Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"row g-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              id: \"show_hide_password\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                value: playListName != \"\" ? playListName : \"\",\n                onChange: e => setPlayListName(e.target.value),\n                type: \"text\",\n                className: \"form-control border-end-0\",\n                id: \"inputChoosePassword\",\n                placeholder: \"Enter Playlist Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handlePlaylistModelClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          onClick: () => {\n            submitPlaylistData();\n            handlePlaylistModelClose();\n          },\n          children: opration == \"add\" ? \"Add\" : \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ManagePlayList, \"MzVUnCwtYL2V9nVIn57hBQjS26E=\");\n\n_c = ManagePlayList;\nexport default ManagePlayList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManagePlayList\");","map":{"version":3,"sources":["/home/oatvadmin/public_html/admin/src/components/view/ManagePlayList.js"],"names":["React","useState","useEffect","DataTable","ArrowUpwardIcon","Link","toast","Modal","Button","swal","Dropdown","axios","require","configure","ManagePlayList","allData","setallData","callData","get","process","env","REACT_APP_API_URL","then","response","index","data","length","id","document","getElementsByClassName","style","padding","deletePlayList","title","text","icon","buttons","dangerMode","willDelete","post","ids","res","success","catch","err","errorMessage","error","columns","name","selector","row","sortable","reorder","button","cell","_id","setuser","user","setPlayListName","setUpdateId","handlePlaylistModelShow","opacity","zIndex","position","width","e","uploadFile","addPlayListModelshow","SetaddPlayListModelshow","opr","setOpration","handlePlaylistModelClose","opration","playListName","updatePlaylistId","submitPlaylistData","JSON","parse","sessionStorage","getItem","user_id","uploadProfileLoader","setUploadProfileLoader","event","formdata","FormData","append","target","files","console","log","userId","headers","right","overflow","background","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../../css/style.css\";\nimport DataTable from \"react-data-table-component\";\nimport ArrowUpwardIcon from \"@mui/icons-material/ArrowUpward\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport swal from \"sweetalert\";\nimport { Dropdown } from \"react-bootstrap\";\n\nconst axios = require(\"axios\");\ntoast.configure();\n\nfunction ManagePlayList() {\n  const [allData, setallData] = useState([]);\n  function callData() {\n    axios\n      .get(process.env.REACT_APP_API_URL + \"/manageplaylist/getAlldata\")\n      .then((response) => {\n        for (let index = 0; index < response.data.length; index++)\n          response.data[index].id = index + 1;\n        setallData(response.data);\n      });\n  }\n  useEffect(() => {\n    callData();\n    document.getElementsByClassName(\"page-content\")[0].style.padding =\n      \"1.5rem 1.5rem 0 1.5rem\";\n  }, []);\n  //  Delete PlayList\n  const deletePlayList = (id) => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this imaginary file!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        axios\n          .post(process.env.REACT_APP_API_URL + \"/manageplaylist/delete\", {\n            ids: id,\n          })\n          .then((res) => {\n            toast.success(\"Delete Successfully\", {});\n            callData();\n          })\n          .catch((err) => {\n            if (\n              err.response &&\n              err.response.data &&\n              err.response.data.errorMessage\n            ) {\n              toast.error(err.response.data.errorMessage, {});\n            }\n          });\n      }\n    });\n  };\n  const columns = [\n    {\n      id: 1,\n      name: \"S.no\",\n      selector: (row) => row.id,\n      sortable: true,\n      reorder: true,\n    },\n    {\n      id: 2,\n      name: \"Title\",\n      selector: (row) => row.title,\n      sortable: true,\n      reorder: true,\n    },\n    { id: 3, name: \"Videos\", button: true, cell: (row) => <i>Active</i> },\n    // { id: 4, name: \"\", cell: (row) => \"\" },\n    {\n      id: 4,\n      name: \"Action\",\n      button: true,\n      cell: (row) => (\n        <React.Fragment>\n          <Button\n            onClick={() => deletePlayList(row._id)}\n            className=\"btn btn-sm btn-light\"\n          >\n            <i className=\"bx bx-trash me-0\"></i>\n          </Button>\n          &nbsp;\n          <Button\n            onClick={() => {\n              setuser(row.user);\n              setPlayListName(row.title);\n              setUpdateId(row._id);\n              handlePlaylistModelShow(\"update\");\n            }}\n            className=\"btn btn-sm btn-light\"\n          >\n            <i className=\"lni lni-pencil-alt me-0\"></i>\n          </Button>\n          &nbsp;\n        </React.Fragment>\n      ),\n    },\n    {\n      id: 5,\n      name: \"\",\n      cell: (row) => (\n        <>\n          <Button className=\"btn btn-sm btn-light\">\n            <i className=\"lni lni-cloud-upload me-0\"></i>\n          </Button>\n          <input\n            style={{\n              opacity: \"0\",\n              zIndex: \"1\",\n              position: \"absolute\",\n              width: \"40px\",\n            }}\n            accept=\".csv\"\n            onChange={(e) => {\n              uploadFile(e);\n              setUpdateId(row._id);\n            }}\n            type=\"file\"\n            className=\"form-control\"\n          />\n        </>\n      ),\n    },\n  ];\n  const [addPlayListModelshow, SetaddPlayListModelshow] = useState(false);\n  const handlePlaylistModelShow = (opr) => {\n    SetaddPlayListModelshow(true);\n    setOpration(opr);\n    if (opr == \"add\") setPlayListName(\"\");\n  };\n  const handlePlaylistModelClose = () => SetaddPlayListModelshow(false);\n  // ////////////////////////\n  // Submit Playlist Data\n  const [opration, setOpration] = useState(\"\");\n  const [playListName, setPlayListName] = useState(\"\");\n  const [user, setuser] = useState(\"\");\n  const [updatePlaylistId, setUpdateId] = useState(\"\");\n  const submitPlaylistData = () => {\n    axios\n      .post(process.env.REACT_APP_API_URL + \"/manageplaylist/add\", {\n        title: playListName,\n        opration: opration,\n        id: updatePlaylistId,\n        user: JSON.parse(sessionStorage.getItem(\"userDetails\")).user_id,\n      })\n      .then((res) => {\n        if (opration == \"add\") toast.success(\"Added Successfully\", {});\n        else toast.success(\"Update Successfully\", {});\n        callData();\n      })\n      .catch((err) => {\n        if (\n          err.response &&\n          err.response.data &&\n          err.response.data.errorMessage\n        ) {\n          toast.error(err.response.data.errorMessage, {});\n        }\n      });\n  };\n\n  const [uploadProfileLoader, setUploadProfileLoader] = useState(false);\n  const uploadFile = (event) => {\n    setUploadProfileLoader(true);\n\n    const formdata = new FormData();\n    formdata.append(\"avtar\", event.target.files[0]);\n    formdata.append(\n      \"userId\",\n      JSON.parse(sessionStorage.getItem(\"userDetails\")).user_id\n    );\n    console.log(formdata);\n    axios\n      .post(\n        process.env.REACT_APP_API_URL + \"/playlist/importCsv\",\n        formdata,\n        { userId: JSON.parse(sessionStorage.getItem(\"userDetails\")).user_id },\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            \"Access-Control-Allow-Origin\": \"*\",\n          },\n        }\n      )\n      .then((res) => {\n        if (res.data.length != 0) setUploadProfileLoader(false);\n        toast.success(\"File Imported Successfully\", {});\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <>\n      <div className=\"col\">\n        <div style={{ position: \"relative\" }} className=\"col-12 text-right\">\n          <Button\n            onClick={() => handlePlaylistModelShow(\"add\")}\n            style={{ position: \"absolute\", right: \"0%\" }}\n            className=\"btn btn-light float-right my-2\"\n            variant=\"primary\"\n          >\n            Add Playlist\n          </Button>\n        </div>\n        <br />\n        {/* <div className='col-3'>\n\t\t\t\t<form\n                  action=\"\"\n                  method=\"post\"\n                  encType=\"multipart/form-data\" \n                >\n\t\t\t\t\t\t<input onChange={(e) => uploadFile(e)} type=\"file\" className='form-control'/>\n\t\t\t\t\t</form>\n\t\t\t\n\t\t\t\t</div> */}\n        <br />\n        <br />\n\n        <div className=\"card p-3\" style={{ overflow: \"auto\" }}>\n          <DataTable\n            style={{ background: \"transparent\" }}\n            title=\"Playlists\"\n            columns={columns}\n            data={allData}\n            defaultSortFieldId={1}\n            sortIcon={<ArrowUpwardIcon />}\n            pagination\n          />\n        </div>\n      </div>\n      {/* Add Data Model */}\n      <Modal show={addPlayListModelshow} onHide={handlePlaylistModelClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            {opration == \"add\" ? \"Add Playlist\" : \"Edit Playlist\"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <form className=\"row g-3\">\n            <div className=\"col-12\">\n              <label className=\"form-label\">Title</label>\n              <div className=\"input-group\" id=\"show_hide_password\">\n                <input\n                  value={playListName != \"\" ? playListName : \"\"}\n                  onChange={(e) => setPlayListName(e.target.value)}\n                  type=\"text\"\n                  className=\"form-control border-end-0\"\n                  id=\"inputChoosePassword\"\n                  placeholder=\"Enter Playlist Title\"\n                />\n              </div>\n            </div>\n          </form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handlePlaylistModelClose}>\n            Close\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"primary\"\n            onClick={() => {\n              submitPlaylistData();\n              handlePlaylistModelClose();\n            }}\n          >\n            {opration == \"add\" ? \"Add\" : \"Update\"}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\nexport default ManagePlayList;\n"]},"metadata":{},"sourceType":"module"}