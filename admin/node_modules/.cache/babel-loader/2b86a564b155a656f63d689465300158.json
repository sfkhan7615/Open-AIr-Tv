{"ast":null,"code":"var _jsxFileName = \"/home/oatvadmin/public_html/admin/src/components/view/Uploads.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport '../../css/style.css';\nimport DataTable from \"react-data-table-component\";\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport swal from 'sweetalert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\ntoast.configure();\n\nfunction ManagePlayList() {\n  _s();\n\n  const [allData, setallData] = useState([]);\n\n  function callData() {\n    axios.get(process.env.REACT_APP_API_URL + \"/manageplaylist/getAlldata\").then(response => {\n      for (let index = 0; index < response.data.length; index++) response.data[index].id = index + 1;\n\n      setallData(response.data);\n    });\n  }\n\n  useEffect(() => {\n    callData();\n    document.getElementsByClassName('page-content')[0].style.padding = \"1.5rem 1.5rem 0 1.5rem\";\n  }, []); //  Delete PlayList\n\n  const deletePlayList = id => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this imaginary file!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true\n    }).then(willDelete => {\n      if (willDelete) {\n        axios.post(process.env.REACT_APP_API_URL + '/manageplaylist/add', {\n          currentplaylistid: id,\n          opration: \"deleteIntro\"\n        }).then(res => {\n          toast.success(\"Delete Successfully\", {});\n          callData();\n        }).catch(err => {\n          if (err.response && err.response.data && err.response.data.errorMessage) {\n            toast.error(err.response.data.errorMessage, {});\n          }\n        });\n      }\n    });\n  };\n\n  const columns = [{\n    id: 1,\n    name: 'S.no',\n    selector: row => row.id,\n    sortable: true,\n    reorder: true\n  }, {\n    id: 2,\n    name: \"Users\",\n    selector: row => row._id,\n    sortable: true,\n    reorder: true\n  }, {\n    id: 3,\n    name: \"Videos\",\n    selector: row => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: row.introVideo != null ? row.introVideo.split('_')[1].substring(0, 20) + \"...\" : \"Video Not Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this)\n  }, // { id: 3, name: \"Videos\", button: true, cell: (row) => <i>Active</i> },\n  {\n    id: 4,\n    name: \"\",\n    cell: row => \"\"\n  }, {\n    id: 5,\n    name: \"Action\",\n    button: true,\n    cell: row => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => deletePlayList(row._id),\n        className: \"btn btn-sm btn-light\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bx bx-trash me-0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 87\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 6\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          setuser(row.user);\n          setPlayListName(row.introVideo);\n          setUpdateId(row._id);\n          handlePlaylistModelShow(\"update\");\n        },\n        className: \"btn btn-sm btn-light\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"lni lni-pencil-alt me-0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 176\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)\n  }];\n  const [addPlayListModelshow, SetaddPlayListModelshow] = useState(false);\n\n  const handlePlaylistModelShow = opr => {\n    SetaddPlayListModelshow(true);\n    setOpration(opr);\n    if (opr == \"add\") setPlayListName(\"\");\n  };\n\n  const handlePlaylistModelClose = () => SetaddPlayListModelshow(false); // ////////////////////////\n  // Submit Playlist Data\n\n\n  const [opration, setOpration] = useState('');\n  const [playListName, setPlayListName] = useState(\"\");\n  const [user, setuser] = useState(\"\");\n  const [updatePlaylistId, setUpdateId] = useState(\"\");\n\n  const submitPlaylistData = () => {\n    axios.post(process.env.REACT_APP_API_URL + '/manageplaylist/add', {\n      title: playListName,\n      opration: opration,\n      id: updatePlaylistId\n    }).then(res => {\n      if (opration == \"add\") toast.success(\"Added Successfully\", {});else toast.success(\"Update Successfully\", {});\n      callData();\n    }).catch(err => {\n      if (err.response && err.response.data && err.response.data.errorMessage) {\n        toast.error(err.response.data.errorMessage, {});\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Currently Working\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card p-3\",\n        style: {\n          overflow: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          style: {\n            background: 'transparent'\n          },\n          title: \"Playlists\",\n          columns: columns,\n          data: allData,\n          defaultSortFieldId: 1,\n          sortIcon: /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 139\n          }, this),\n          pagination: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: addPlayListModelshow,\n      onHide: handlePlaylistModelClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"row g-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              id: \"show_hide_password\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                value: playListName != \"\" ? playListName : \"\",\n                onChange: e => setPlayListName(e.target.value),\n                type: \"text\",\n                className: \"form-control border-end-0\",\n                id: \"inputChoosePassword\",\n                placeholder: \"Enter Playlist Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handlePlaylistModelClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          onClick: () => {\n            submitPlaylistData();\n            handlePlaylistModelClose();\n          },\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ManagePlayList, \"ZBQi/CJrXfIHCYziPbuyQH+rugo=\");\n\n_c = ManagePlayList;\nexport default ManagePlayList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManagePlayList\");","map":{"version":3,"sources":["/home/oatvadmin/public_html/admin/src/components/view/Uploads.js"],"names":["React","useState","useEffect","DataTable","ArrowUpwardIcon","Link","toast","Modal","Button","swal","axios","require","configure","ManagePlayList","allData","setallData","callData","get","process","env","REACT_APP_API_URL","then","response","index","data","length","id","document","getElementsByClassName","style","padding","deletePlayList","title","text","icon","buttons","dangerMode","willDelete","post","currentplaylistid","opration","res","success","catch","err","errorMessage","error","columns","name","selector","row","sortable","reorder","_id","introVideo","split","substring","cell","button","setuser","user","setPlayListName","setUpdateId","handlePlaylistModelShow","addPlayListModelshow","SetaddPlayListModelshow","opr","setOpration","handlePlaylistModelClose","playListName","updatePlaylistId","submitPlaylistData","overflow","background","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../../css/style.css';\nimport DataTable from \"react-data-table-component\";\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport swal from 'sweetalert';\nconst axios = require('axios');\ntoast.configure();\n\nfunction ManagePlayList() {\n\n\tconst [allData, setallData] = useState([]);\n\tfunction callData() {\n\t\taxios.get(process.env.REACT_APP_API_URL + \"/manageplaylist/getAlldata\").then((response) => {\n\t\t\tfor (let index = 0; index < response.data.length; index++)\n\t\t\t\tresponse.data[index].id = index+1;\n\t\t\tsetallData(response.data);\n\t\t});\n\t}\n\tuseEffect(() => {\n\t\tcallData();\n\t\tdocument.getElementsByClassName('page-content')[0].style.padding = \"1.5rem 1.5rem 0 1.5rem\";\n\t}, [])\n\t//  Delete PlayList\n\tconst deletePlayList = (id) => {\n\t\tswal({\n\t\t\ttitle: \"Are you sure?\",\n\t\t\ttext: \"Once deleted, you will not be able to recover this imaginary file!\",\n\t\t\ticon: \"warning\",\n\t\t\tbuttons: true,\n\t\t\tdangerMode: true,\n\t\t}).then((willDelete) => {\n\t\t\tif (willDelete) {\n\t\t\t\taxios.post(process.env.REACT_APP_API_URL + '/manageplaylist/add', { currentplaylistid: id , opration :\"deleteIntro\"}).then((res) => {\n\t\t\t\t\ttoast.success(\"Delete Successfully\", {});\n\t\t\t\t\tcallData();\n\t\t\t\t}).catch((err) => {\n\t\t\t\t\tif (err.response && err.response.data && err.response.data.errorMessage) {\n\t\t\t\t\t\ttoast.error(err.response.data.errorMessage, {});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\t\n\t\n\tconst columns = [\n\t\t{ id: 1, name: 'S.no', selector: (row) => row.id, sortable: true, reorder: true },\n\t\t{ id: 2, name: \"Users\", selector: (row) => row._id, sortable: true, reorder: true },\n\t\t{ id: 3, name: \"Videos\", selector: (row) =>  \n\t\t\t<React.Fragment>\n\t\t\t\t{row.introVideo != null ? (row.introVideo.split('_')[1].substring(0,20))+\"...\" : (\"Video Not Found\")}\n\t\t\t</React.Fragment>,\n\t\t},\n\t\t// { id: 3, name: \"Videos\", button: true, cell: (row) => <i>Active</i> },\n\t\t{ id: 4, name: \"\", cell: (row) => \"\" },\n\t\t{\n\t\t\tid: 5, name: \"Action\", button: true, cell: (row) =>\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<Button onClick={() => deletePlayList(row._id)} className=\"btn btn-sm btn-light\"><i className=\"bx bx-trash me-0\" ></i></Button>&nbsp;\n\t\t\t\t\t<Button onClick={() => { setuser(row.user); setPlayListName(row.introVideo); setUpdateId(row._id); handlePlaylistModelShow(\"update\"); }} className=\"btn btn-sm btn-light\"><i className=\"lni lni-pencil-alt me-0\"></i></Button>\n\t\t\t\t</React.Fragment>,\n\t\t}\n\t\t\n\t];\n\tconst [addPlayListModelshow, SetaddPlayListModelshow] = useState(false);\n\tconst handlePlaylistModelShow = (opr) => {\n\t\tSetaddPlayListModelshow(true);\n\t\tsetOpration(opr);\n\t\tif (opr == \"add\")\n\t\t\tsetPlayListName(\"\");\n\t}\n\tconst handlePlaylistModelClose = () => SetaddPlayListModelshow(false);\n\t// ////////////////////////\n\t// Submit Playlist Data\n\tconst [opration, setOpration] = useState('');\n\tconst [playListName, setPlayListName] = useState(\"\");\n\tconst [user, setuser] = useState(\"\");\n\tconst [updatePlaylistId, setUpdateId] = useState(\"\");\n\tconst submitPlaylistData = () => {\n\t\taxios.post(process.env.REACT_APP_API_URL + '/manageplaylist/add', {\n\t\t\ttitle: playListName,\n\t\t\topration: opration,\n\t\t\tid: updatePlaylistId\n\t\t}).then((res) => {\n\t\t\tif (opration == \"add\")\n\t\t\ttoast.success(\"Added Successfully\", {});\n\t\t\telse\n\t\t\ttoast.success(\"Update Successfully\", {});\n\t\t\tcallData();\n\t\t}).catch((err) => {\n\t\t\tif (err.response && err.response.data && err.response.data.errorMessage) {\n\t\t\t\ttoast.error(err.response.data.errorMessage, {});\n\t\t\t}\n\t\t});\n\t}\n\treturn (\n\t\t<>\n\t\t<h1>Currently Working</h1>\n\t\t\t<div className=\"col\">\n\t\t\t\t<br /><br />\n\t\t\t\t<div className=\"card p-3\" style={{ overflow: 'auto' }}>\n\t\t\t\t\t<DataTable style={{ background: 'transparent' }} title=\"Playlists\" columns={columns} data={allData} defaultSortFieldId={1} sortIcon={<ArrowUpwardIcon />} pagination />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{/* Add Data Model */}\n\t\t\t<Modal show={addPlayListModelshow} onHide={handlePlaylistModelClose}>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>Add Playlist</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<form className=\"row g-3\">\n\t\t\t\t\t\t<div className=\"col-12\">\n\t\t\t\t\t\t\t<label className=\"form-label\">Title</label>\n\t\t\t\t\t\t\t<div className=\"input-group\" id=\"show_hide_password\">\n\t\t\t\t\t\t\t\t<input value={\n\t\t\t\t\t\t\t\t\tplayListName != \"\" ? playListName : \"\"\n\t\t\t\t\t\t\t\t} onChange={e => setPlayListName(e.target.value)} type=\"text\" className=\"form-control border-end-0\" id=\"inputChoosePassword\" placeholder=\"Enter Playlist Title\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button variant=\"secondary\" onClick={handlePlaylistModelClose}>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button type='submit' variant=\"primary\" onClick={() => { submitPlaylistData(); handlePlaylistModelClose(); }}>\n\t\t\t\t\t\tAdd\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</>\n\t)\n}\nexport default ManagePlayList"]},"metadata":{},"sourceType":"module"}